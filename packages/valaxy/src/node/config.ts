import { loadConfig } from 'c12'
import defu from 'defu'
import type { ValaxyConfig } from '../types'
import type { ValaxyEntryOptions } from './options'

// for user config
export async function resolveConfig(options: ValaxyEntryOptions = {}) {
  const { config, configFile } = await loadConfig<ValaxyConfig>({
    name: 'valaxy',
    defaults: {
      title: 'Valaxy Blog',
      subtitle: 'Next Generation Static Blog Framework.',
      author: {
        avatar: 'https://cdn.jsdelivr.net/gh/YunYouJun/yun/images/meme/yun-good-with-bg.jpg',
        name: 'YunYouJun',
        status: {
          emoji: 'ðŸ˜Š',
          message: 'All at sea.',
        },
      },
      description: 'A blog generated by Valaxy.',
      theme: 'yun',
      themeConfig: {},
    },
  })

  const theme = options.theme || config.theme || 'yun'

  try {
    const { defaultThemeConfig } = await import(`valaxy-theme-${theme}`)
    config.themeConfig = defu(config.themeConfig, defaultThemeConfig)
  }
  catch (e) {
    console.error(`valaxy-theme-${theme} doesn't have default config`)
  }

  return {
    config,
    configFile,
    theme,
  }
}
