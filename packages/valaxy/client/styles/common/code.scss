@use "~/styles/mixins" as *;

@include mobile {
  .markdown-body {
    div[class*="language-"] {
      margin: 0 -1rem;
    }
  }
}

.markdown-body {
  div[class*="language-"] {
    position: relative;
    background-color: var(--va-code-block-bg);

    code {
      padding: 0;
      background-color: var(--va-code-bg-color);
    }

    pre {
      position: relative;
      padding: 1rem;
      z-index: 1;
      background: none;

      // expand
      code {
        display: block;
      }
    }
  }
}

/* Line highlighting */

.dark {
  .highlight-lines {
    .highlighted {
      background-color: rgba(0, 0, 0, 0.4);
    }
  }
}

// marker
.markdown-body {
  .highlight-lines {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    padding: 1rem 0;
    width: 100%;
    line-height: var(--va-code-line-height);
    font-family: var(--va-font-mono);
    font-size: var(--va-code-font-size);
    user-select: none;
    overflow: hidden;

    .highlighted {
      background-color: rgba(0, 0, 0, 0.08);
    }
  }

  [class*="language-"] > span.copy {
    position: absolute;
    top: 8px;
    right: 8px;
    z-index: 2;
    display: block;
    justify-content: center;
    align-items: center;
    border-radius: 4px;
    width: 40px;
    height: 40px;
    background-color: var(--va-code-block-bg);
    opacity: 0;
    cursor: pointer;
    background-image: var(--va-icon-copy);
    background-position: 50%;
    background-size: 20px;
    background-repeat: no-repeat;
    transition: opacity 0.25s;
  }

  [class*="language-"]:hover > span.copy {
    opacity: 1;
  }

  [class*="language-"] > span.copy:hover {
    background-color: var(--va-code-copy-code-hover-bg);
  }

  [class*="language-"] > span.copy.copied,
  [class*="language-"] > span.copy:hover.copied {
    border-radius: 0 4px 4px 0;
    background-color: var(--va-code-copy-code-hover-bg);
    background-image: var(--va-icon-copied);
  }

  [class*="language-"] > span.copy.copied::before,
  [class*="language-"] > span.copy:hover.copied::before {
    position: relative;
    left: -65px;
    display: block;
    border-radius: 4px 0 0 4px;
    padding-top: 8px;
    width: 64px;
    height: 40px;
    text-align: center;
    font-size: 12px;
    font-weight: 500;
    color: var(--va-code-copy-code-active-text);
    background-color: var(--va-code-copy-code-hover-bg);
    white-space: nowrap;
    content: "Copied";
  }

  [class*="language-"]:before {
    position: absolute;
    top: 6px;
    right: 12px;
    z-index: 2;
    font-size: 12px;
    font-weight: 500;
    color: var(--va-c-text-dark-3);
    transition: color 0.5s, opacity 0.5s;
  }

  [class*="language-"]:hover:before {
    opacity: 0;
  }

  [class~="language-c"]:before {
    content: "c";
  }
  [class~="language-css"]:before {
    content: "css";
  }
  [class~="language-go"]:before {
    content: "go";
  }
  [class~="language-html"]:before {
    content: "html";
  }
  [class~="language-java"]:before {
    content: "java";
  }
  [class~="language-javascript"]:before {
    content: "js";
  }
  [class~="language-js"]:before {
    content: "js";
  }
  [class~="language-json"]:before {
    content: "json";
  }
  [class~="language-jsx"]:before {
    content: "jsx";
  }
  [class~="language-less"]:before {
    content: "less";
  }
  [class~="language-markdown"]:before {
    content: "md";
  }
  [class~="language-md"]:before {
    content: "md";
  }
  [class~="language-php"]:before {
    content: "php";
  }
  [class~="language-python"]:before {
    content: "py";
  }
  [class~="language-py"]:before {
    content: "py";
  }
  [class~="language-rb"]:before {
    content: "rb";
  }
  [class~="language-ruby"]:before {
    content: "rb";
  }
  [class~="language-rust"]:before {
    content: "rust";
  }
  [class~="language-sass"]:before {
    content: "sass";
  }
  [class~="language-scss"]:before {
    content: "scss";
  }
  [class~="language-sh"]:before {
    content: "sh";
  }
  [class~="language-bash"]:before {
    content: "sh";
  }
  [class~="language-stylus"]:before {
    content: "styl";
  }
  [class~="language-vue-html"]:before {
    content: "template";
  }
  [class~="language-typescript"]:before {
    content: "ts";
  }
  [class~="language-ts"]:before {
    content: "ts";
  }
  [class~="language-tsx"]:before {
    content: "tsx";
  }
  [class~="language-vue"]:before {
    content: "vue";
  }
  [class~="language-yaml"]:before {
    content: "yaml";
  }
}
